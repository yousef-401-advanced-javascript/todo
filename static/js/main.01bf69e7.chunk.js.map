{"version":3,"sources":["components/todo/form.js","components/todo/list.js","components/todo/todo-connected.js","app.js","index.js"],"names":["TodoForm","props","useState","item","itemState","handleInputChange","e","target","name","value","onSubmit","preventDefault","reset","handleSubmit","type","placeholder","onChange","defaultValue","min","max","TodoList","list","map","console","log","className","complete","toString","key","_id","onClick","handleComplete","text","deleteHandler","todoAPI","ToDo","setList","_getTodoItems","fetch","method","mode","then","data","json","catch","error","useEffect","filter","length","due","Date","cache","headers","body","JSON","stringify","response","savedItem","id","i","url","undefined","deletedItem","App","Main","React","Component","rootElement","document","getElementById","ReactDOM","render"],"mappings":"4PAwDeA,MArDf,SAAmBC,GAAQ,IAAD,EAEAC,mBAAS,IAFT,mBAEnBC,EAFmB,KAEbC,EAFa,KAGlBC,EAAoB,SAAAC,GASxBF,EAAU,2BAAID,GAAL,kBAAYG,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAehD,OACE,oCACE,wCACA,0BAAMC,SAVW,SAACJ,GACpBA,EAAEK,iBACFL,EAAEC,OAAOK,QACTX,EAAMY,aAAaV,GACnBC,EAAU,CAAEU,KAAM,YAOd,+BACE,4CACA,2BACEN,KAAK,OACLO,YAAY,sBACZC,SAAUX,KAGd,+BACE,mDACA,2BAAOY,aAAa,IAAIH,KAAK,QAAQI,IAAI,IAAIC,IAAI,IAAIX,KAAK,aAAaQ,SAAUX,KAEnF,+BACE,6CACA,2BAAOS,KAAK,OAAON,KAAK,WAAWO,YAAY,cAAcC,SAAUX,KAEzE,+CC5BOe,MApBf,SAAmBnB,GAEjB,OACE,4BACGA,EAAMoB,KAAKC,KAAI,SAAAnB,GAAI,OAClBoB,QAAQC,IAAI,YAAYrB,GACxB,wBACEsB,UAAS,mBAActB,EAAKuB,SAASC,YACrCC,IAAKzB,EAAK0B,KAEV,0BAAMC,QAAS,kBAAM7B,EAAM8B,eAAe5B,EAAK0B,OAC5C1B,EAAK6B,MAER,4BAAQF,QAAS7B,EAAMgC,cAAc9B,EAAK0B,MAA1C,gBCTJK,G,MAAU,sCAwHDC,EArHF,WAAO,IAAD,EAEOjC,mBAAS,IAFhB,mBAEVmB,EAFU,KAEJe,EAFI,KA4EXC,EAAgB,WACpBC,MAAMJ,EAAS,CACbK,OAAQ,MACRC,KAAM,SAELC,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAC,GAAI,OAAIN,EAAQM,MACrBE,MAAMrB,QAAQsB,QAKnB,OAFAC,oBAAUT,EAAe,IAIvB,oCACGd,QAAQC,IAAI,QAAQH,GACrB,gCACE,yCACcA,EAAK0B,QAAO,SAAA5C,GAAI,OAAKA,EAAKuB,YAAUsB,OADlD,wBAMF,6BAASvB,UAAU,QAEjB,6BACE,kBAAC,EAAD,CAAUZ,aAlGD,SAACV,GAChBA,EAAK8C,IAAM,IAAIC,KACfZ,MAAMJ,EAAS,CACbK,OAAQ,OACRC,KAAM,OACNW,MAAO,WACPC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUpD,KAEpBsC,MAAK,SAAAe,GAAQ,OAAIA,EAASb,UAC1BF,MAAK,SAAAgB,GACJrB,EAAQ,GAAD,mBAAKf,GAAL,CAAWoC,QAEnBb,MAAMrB,QAAQsB,WAwFb,6BACE,kBAAC,EAAD,CACExB,KAAMA,EACNU,eAxFc,SAAA2B,GAEtB,IAAIvD,EAAOkB,EAAK0B,QAAO,SAAAY,GAAC,OAAIA,EAAE9B,MAAQ6B,KAAI,IAAM,GAEhD,GAAIvD,EAAK0B,IAAK,CAEZ1B,EAAKuB,UAAYvB,EAAKuB,SAEtB,IAAIkC,EAAG,UAAM1B,GAEbI,MAAMsB,EAAK,CACTrB,OAAQ,MACRC,KAAM,OACNW,MAAO,WACPC,QAAS,CAAE,eAAgB,mBAAoB,GAAKM,GACpDL,KAAMC,KAAKC,UAAUpD,KAEpBsC,MAAK,SAAAe,GAAQ,OAAIA,EAASb,UAC1BF,MAAK,SAAAgB,GACJlC,QAAQC,IAAI,YAAYiC,GACxBpB,OAGDO,MAAMrB,QAAQsB,SAkEXZ,cA/Da,SAAAyB,GAErBnC,QAAQC,IAAI,kBAAkBH,GAM9B,IAAIuC,EAAG,UAAM1B,GAEbI,MAAMsB,EAAK,CACTrB,OAAQ,SACRC,KAAM,OACNW,MAAO,WACPC,QAAS,CAAE,eAAgB,mBAAoB,GAAKM,GACpDL,UAAKQ,IAEJpB,MAAK,SAAAe,GAAQ,OAAIA,EAASb,UAC1BF,MAAK,SAAAqB,GACJvC,QAAQC,IAAI,cAAcsC,GAE1B1B,EAAQf,EAAK0B,QAAO,SAAAY,GAAC,OAAIA,EAAE9B,MAAQ6B,MACnCnC,QAAQC,IAAI,QAAQH,MAGtBE,QAAQC,IAAI,iBAAkBH,UCnErB0C,EAPH,WACV,OACE,oCACE,kBAAC,EAAD,QCJAC,E,uKAEF,OAAO,kBAAC,EAAD,U,GAFQC,IAAMC,WAMnBC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAO,kBAAC,EAAD,MAAUJ,K","file":"static/js/main.01bf69e7.chunk.js","sourcesContent":["import React, {useState } from 'react';\n\n\nfunction TodoForm (props) {\n\n  let [item ,itemState] = useState({});\n  const handleInputChange = e => {\n    // const [allItem ,allItemState] = useState({});\n    // console.log('e.target.value',e.target.value);\n    // console.log('item',item);\n    // console.log('e.target.name',e.target.name);\n    // itemState([...allItem,item]);\n    //////////////\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n    //to do input \n    //its used to change the state and adding  new key(assignee) with value of (Assigned To Input) OR key difficulty with value of the scale range input\n    itemState({...item, [e.target.name]: e.target.value } );\n    /*\n    * rally good implementing\n    (copying the item object and if the kye is not there it will\n    add it with the value but if key is there just change it with the new one)    \n    */\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    e.target.reset();\n    props.handleSubmit(item);\n    itemState({ type: 'reset' });\n  };\n\n  return (\n    <>\n      <h3>Add Item</h3>\n      <form onSubmit={handleSubmit}>\n        <label>\n          <span>To Do Item</span>\n          <input\n            name=\"text\"\n            placeholder=\"Add To Do List Item\"\n            onChange={handleInputChange}\n          />\n        </label>\n        <label>\n          <span>Difficulty Rating</span>\n          <input defaultValue=\"1\" type=\"range\" min=\"1\" max=\"5\" name=\"difficulty\" onChange={handleInputChange} />\n        </label>\n        <label>\n          <span>Assigned To</span>\n          <input type=\"text\" name=\"assignee\" placeholder=\"Assigned To\" onChange={handleInputChange} />\n        </label>\n        <button>Add Item</button>\n      </form>\n    </>\n  );\n}\n\nexport default TodoForm;\n","import React from 'react';\n\nfunction TodoList (props) {\n\n  return (\n    <ul>\n      {props.list.map(item => (\n        console.log('item list',item),\n        <li\n          className={`complete-${item.complete.toString()}`}\n          key={item._id}\n        >\n          <span onClick={() => props.handleComplete(item._id)}>\n            {item.text}\n          </span>\n          <button onClick={props.deleteHandler(item._id)}>Delete</button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default TodoList;\n","import React, { useEffect, useState } from 'react';\nimport TodoForm from './form.js';\nimport TodoList from './list.js';\n\nimport './todo.scss';\n\nconst todoAPI = 'https://lab3232.herokuapp.com/todo';\n\n\nconst ToDo = () => {\n\n  const [list, setList] = useState([]);\n\n  const _addItem = (item) => {\n    item.due = new Date();\n    fetch(todoAPI, {\n      method: 'post',\n      mode: 'cors',\n      cache: 'no-cache',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(item),\n    })\n      .then(response => response.json())\n      .then(savedItem => {\n        setList([...list, savedItem]);\n      })\n      .catch(console.error);\n  };\n\n  const _toggleComplete = id => {\n\n    let item = list.filter(i => i._id === id)[0] || {};\n\n    if (item._id) {\n\n      item.complete = !item.complete;\n\n      let url = `${todoAPI}`;//there is /id  but i delete it\n      // console.log('item put',id);\n      fetch(url, {\n        method: 'put',\n        mode: 'cors',\n        cache: 'no-cache',\n        headers: { 'Content-Type': 'application/json' ,'bo':id},\n        body: JSON.stringify(item),\n      })\n        .then(response => response.json())\n        .then(savedItem => {\n          console.log('savedItem',savedItem);\n          _getTodoItems();\n          // setList(list.map(listItem => listItem._id === item._id ? savedItem : listItem));\n        })\n        .catch(console.error);\n    }\n  };\n  const _deleteHandler = id => {\n\n    console.log('delete handler3',list);\n    // console.log('1',allItems);\n    // if (item._id) {\n      \n    // item.complete = !item.complete;\n      \n    let url = `${todoAPI}`;//there is /id  but i delete it\n    // console.log('item put',id);\n    fetch(url, {\n      method: 'delete',\n      mode: 'cors',\n      cache: 'no-cache',\n      headers: { 'Content-Type': 'application/json' ,'bo':id},\n      body:undefined,\n    })\n      .then(response => response.json())\n      .then(deletedItem => {\n        console.log('deletedItem',deletedItem);\n\n        setList(list.filter(i => i._id !== id));\n        console.log('state',list);\n        // setList(list.filter(listItem => listItem._id !== item._id ));\n      });\n      console.log('list after del', list);\n    // .catch(console.error);\n    // }\n  };\n\n  const _getTodoItems = () => {\n    fetch(todoAPI, {\n      method: 'get',\n      mode: 'cors',\n    })\n      .then(data => data.json())\n      .then(data => setList(data))\n      .catch(console.error);\n  };\n\n  useEffect(_getTodoItems, []);\n\n  return (\n    \n    <>\n      {console.log('list1',list)}\n      <header>\n        <h2>\n          There are { list.filter(item => !item.complete).length};\n          Items To Complete\n        </h2>\n      </header>\n\n      <section className=\"todo\">\n\n        <div>\n          <TodoForm handleSubmit={_addItem} />\n        </div>\n\n        <div>\n          <TodoList\n            list={list}\n            handleComplete={_toggleComplete}\n            deleteHandler={_deleteHandler}\n          />\n        </div>\n      </section>\n    </>\n  );\n};\n\nexport default ToDo;\n","import React from 'react';\n\n// import ToDo from './components/todo/todo.js';\nimport ToDo from './components/todo/todo-connected.js';\n\n\nconst App = ()=> {\n  return (\n    <>\n      <ToDo />\n    </>\n  );\n};\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './app.js';\n\nclass Main extends React.Component {\n  render() {\n    return <App />;\n  }\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Main />, rootElement);\n"],"sourceRoot":""}