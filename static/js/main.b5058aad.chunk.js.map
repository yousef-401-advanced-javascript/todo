{"version":3,"sources":["hooks/useForm.js","components/todo/form.js","context/context.js","components/todo/list.js","components/todo/site.js","hooks/useAjax.js","components/todo/todo-connected.js","app.js","index.js"],"names":["useForm","props","useState","item","itemState","e","target","name","value","preventDefault","reset","handleSubmit","type","TodoForm","handleInputChange","onSubmit","placeholder","onChange","defaultValue","min","max","SettingsContext","React","createContext","SettingsProvider","display","setDisplay","numItems","setNum","sortType","setSort","state","changeDisplay","changeNumItems","changeSortType","toggleMode","Provider","children","styles","true","false","TodoList","Settings","useContext","list","map","className","complete","toString","key","_id","style","undefined","onClick","handleComplete","text","SettingsEditor","context","useAjax","todoAPI","setList","fetch","method","mode","cache","headers","body","JSON","stringify","then","response","json","savedItem","catch","console","error","log","id","filter","i","url","listItem","data","ToDo","_addItem","_toggleComplete","_getTodoItems","useEffect","length","App","Main","Component","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.b5058aad.chunk.js","sourcesContent":["import { useState } from 'react';\n\n\nconst useForm = (props) => {\n  let [item ,itemState] = useState({});\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    e.target.reset();\n    props.handleSubmit(item);\n    itemState({ type: 'reset' });\n  };\n  const handleInputChange = (e) => {\n    itemState({...item, [e.target.name]: e.target.value } );\n    // console.log(item)\n  };\n  return [ handleInputChange, handleSubmit];\n};\n\nexport default useForm;","import React, {useState } from 'react';\nimport useForm from '../../hooks/useForm';\n\nfunction TodoForm (props) {\n  const [handleInputChange, handleSubmit] = useForm(props);\n  // function handleForm(){\n  //   //this is from the todo-connected file \n  //   props.handleSubmit(item);\n  // }\n    \n  return (\n    <>\n      <h3>Add Item</h3>\n      <form onSubmit={handleSubmit}>\n        <label>\n          <span>To Do Item</span>\n          <input\n            name=\"text\"\n            placeholder=\"Add To Do List Item\"\n            onChange={handleInputChange}\n          />\n        </label>\n        <label>\n          <span>Difficulty Rating</span>\n          <input defaultValue=\"1\" type=\"range\" min=\"1\" max=\"5\" name=\"difficulty\" onChange={handleInputChange} />\n        </label>\n        <label>\n          <span>Assigned To</span>\n          <input type=\"text\" name=\"assignee\" placeholder=\"Assigned To\" onChange={handleInputChange} />\n        </label>\n        <button>Add Item</button>\n      </form>\n    </>\n  );\n}\n    \nexport default TodoForm;\n\n\n////////////////////////////////////////////////////from previuos labs\n// let [item ,itemState] = useState({});\n// const handleInputChange = e => {\n//   // const [allItem ,allItemState] = useState({});\n//   // console.log('e.target.value',e.target.value);\n//   // console.log('item',item);\n//   // console.log('e.target.name',e.target.name);\n//   // itemState([...allItem,item]);\n//   //////////////\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\n//   //to do input \n//   //its used to change the state and adding  new key(assignee) with value of (Assigned To Input) OR key difficulty with value of the scale range input\n//   itemState({...item, [e.target.name]: e.target.value } );\n//   /*\n//   * rally good implementing\n//   (copying the item object and if the kye is not there it will\n//   add it with the value but if key is there just change it with the new one)    \n//   */\n// };\n\n// const handleSubmit = (e) => {\n//   e.preventDefault();\n//   e.target.reset();\n//   props.handleSubmit(item);\n//   itemState({ type: 'reset' });\n// };\n","import React, { useState } from 'react';\n\nexport const SettingsContext = React.createContext();\n\nfunction SettingsProvider(props){\n  const [display, setDisplay] = useState(true);\n  const [numItems, setNum] = useState(2);\n  const [sortType, setSort] = useState('difficulty');\n  const state = {\n    display,\n    numItems,\n    sortType,\n    changeDisplay:setDisplay,\n    changeNumItems:setNum,\n    changeSortType:setSort,\n    toggleMode: changeMode,\n  };\n  function changeMode(){\n    setDisplay(!state.display);\n  }\n  return(\n    <SettingsContext.Provider value={state}>\n      {props.children}\n    </SettingsContext.Provider>\n  );\n}\nexport default SettingsProvider;\n\n\n","import React,{useContext} from 'react';\nimport { SettingsContext } from '../../context/context';\n\nconst styles = {\n  true: {\n    display: 'block',\n    // color: 'ivory',\n  },\n  false: {\n    display: 'none',\n    // color: '#525252',\n  },\n};\nfunction TodoList (props) {\n  const Settings = useContext( SettingsContext );\n  \n  // console.log('SettingsContext',SettingsContext);\n  return (\n    \n    <ul>\n      {props.list.map(item => (\n        // console.log('item list',item),\n        <li \n          className={`complete-${item.complete.toString()}`}key={item._id}  style={item.complete !==Settings.display? styles[Settings.display]:undefined}>\n\n          <span onClick={() => props.handleComplete(item._id)}> {item.text}   </span>\n\n          {/* <button onClick={props.deleteHandler1(item._id)}>Delete</button> */}\n\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default TodoList;\n","import React, { useContext } from 'react';\nimport { SettingsContext } from '../../context/context';\n\nexport default function SettingsEditor(props){\n  const context = useContext(SettingsContext);\n  return(\n    <>\n      <h3>completed display</h3>\n      <button className={context.display.toString()} onClick={context.toggleMode}>{context.display?'don\\'t show completed':'show completed'}</button>\n    </>\n  );\n}","import  { useState } from 'react';\n\n\nfunction useAjax( ){\n  const todoAPI = 'https://lab3232.herokuapp.com/todo';\n\n  const [list, setList] = useState([]);\n\n  const _addItem = (item) => {\n  // item.due = new Date();\n    fetch(todoAPI, {\n      method: 'post',\n      mode: 'cors',\n      cache: 'no-cache',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(item),\n    })\n      .then(response => response.json())\n      .then(savedItem => {\n        setList([...list, savedItem]);\n      })\n      .catch(console.error);\n    console.log('add', list);\n  };\n\n  const _toggleComplete = id => {\n\n    let item = list.filter(i => i._id === id)[0] || {};\n\n    if (item._id) {\n\n      item.complete = !item.complete;\n\n      let url = `${todoAPI}`;//there is /id  but i delete it\n      // console.log('item put',id);\n      fetch(url, {\n        method: 'put',\n        mode: 'cors',\n        cache: 'no-cache',\n        headers: { 'Content-Type': 'application/json' ,'bo':id},\n        body: JSON.stringify(item),\n      })\n        .then(response => response.json())\n        .then(savedItem => {\n          console.log('savedItem',savedItem);\n          setList(list.map(listItem => listItem._id === item._id ? savedItem : listItem));\n        })\n        .catch(console.error);\n    }\n  };\n  //   const deleteHandler = id => {\n    // let item = list.filter(i => i._id === id)[0] || {};\n    // console.log('delete handler3',list);\n    // console.log('item',item);\n  \n  // // console.log('1',allItems);\n  // // if (item._id) {\n    \n  // // item.complete = !item.complete;\n    \n  // let url = `${todoAPI}`;//there is /id  but i delete it\n  // // console.log('item put',id);\n  // fetch(url, {\n  //   method: 'delete',\n  //   mode: 'cors',\n  //   cache: 'no-cache',\n  //   headers: { 'Content-Type': 'application/json' ,'bo':id},\n  //   body:item?JSON.stringify(item):undefined,\n  // })\n  //   .then(response => response.json())\n  //   .then(deletedItem => {\n  //     console.log('deletedItem',deletedItem);\n\n  //     setList(list.filter(i => i._id !== id));\n  //     console.log('state',list);\n  //     // setList(list.filter(listItem => listItem._id !== item._id ));\n  //   });\n  //   console.log('list after del', list);\n  // // .catch(console.error);\n  // // }\n  //   };\n\n  const _getTodoItems = () => {\n    fetch(todoAPI, {\n      method: 'get',\n      mode: 'cors',\n    })\n      .then(data => data.json())\n      .then(data => setList(data))\n      .catch(console.error);\n  };\n  return [list , _addItem , _toggleComplete , _getTodoItems];\n}\n\nexport default useAjax;\n","import React, { useEffect, useState } from 'react';\nimport TodoForm from './form.js';\nimport TodoList from './list.js';\nimport SiteEditor from './site';\n\n\nimport useAjax from '../../hooks/useAjax';\n\n\nimport './todo.scss';\n\n// const todoAPI = 'https://lab3232.herokuapp.com/todo';\n\n\nconst ToDo = () => {\n\n  const [list, _addItem, _toggleComplete, _getTodoItems] = useAjax();\n\n\n  useEffect(_getTodoItems, []);\n\n  return (\n\n    <>\n      <SiteEditor />\n      {/* {console.log('list1',list)} */}\n      <header>\n        <h2>\n          There are {list.filter(item => !item.complete).length};\n          Items To Complete\n        </h2>\n      </header>\n\n      <section className=\"todo\">\n\n        <div>\n          <TodoForm handleSubmit={_addItem} />\n        </div>\n\n        <div>\n          <TodoList\n            list={list}\n            handleComplete={_toggleComplete}\n          // deleteHandler1={deleteHandler}\n          />\n        </div>\n\n      </section>\n    </>\n  );\n};\n\nexport default ToDo;\n","import React from 'react';\n\n// import ToDo from './components/todo/todo.js';\nimport ToDo from './components/todo/todo-connected.js';\nimport SettingsProvider from './context/context';\n\n\nconst App = () => {\n  return (\n    <SettingsProvider>\n      <ToDo />\n\n    </SettingsProvider>\n\n  );\n};\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './app.js';\n\nclass Main extends React.Component {\n  render() {\n    return <App />;\n  }\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Main />, rootElement);\n"],"sourceRoot":""}